name: Integration tests

on:

  workflow_dispatch:

jobs:

  integration_test:

    runs-on: debian10

    steps:

      - name: cleanup workspace
        run: |
          rm -rf *
          rm -rf .git*

      - uses: actions/checkout@v2

      - name: Assure that Python3 is available
        run: |
          which python3

      - name: Download T2 cluster launch script
        run: |
          curl https://raw.githubusercontent.com/stackabletech/t2/client-script/client/t2.py > t2.py

      - name: Launch cluster via T2 API
        env:
          T2_TOKEN: ${{ secrets.T2_TOKEN }}
        run: | 
          python3 t2.py launch "$T2_TOKEN" https://t2.stackable.tech .github/workflows/resources/cluster-definition.yaml

      - name: Test (step 1) - install Rust and required tools
        run: | 
          ./stackable.sh testdriver-1 -i ./.cluster/key "echo '13.32.25.75     static.rust-lang.org' >> /etc/hosts"
          ./stackable.sh testdriver-1 -i ./.cluster/key "curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y"
          ./stackable.sh testdriver-1 -i ./.cluster/key "cargo --version"
          ./stackable.sh testdriver-1 -i ./.cluster/key "apt-get install gcc -y"
          ./stackable.sh testdriver-1 -i ./.cluster/key "apt-get install libssl-dev -y"
          ./stackable.sh testdriver-1 -i ./.cluster/key "apt-get install pkg-config -y"

      - name: Test (step 2) - clone repository
        run: | 
          ./stackable.sh testdriver-1 -i ./.cluster/key "apt-get install git -y"
          ./stackable.sh testdriver-1 -i ./.cluster/key "git --version"
          ./stackable.sh testdriver-1 -i ./.cluster/key "git clone -b ${GITHUB_REF##*/} https://github.com/stackabletech/agent-integration-tests.git"
 
      - name: Test (step 3) - run tests
        run: | 
          ./stackable.sh testdriver-1 -i ./.cluster/key "cd agent-integration-tests/ && cargo test -- --test-threads=1"

      - name: Terminate cluster via T2 API
        if: always()
        env:
          T2_TOKEN: ${{ secrets.T2_TOKEN }}
        run: | 
          python3 t2.py terminate "$T2_TOKEN" https://t2.stackable.tech

 